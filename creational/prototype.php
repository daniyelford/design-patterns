<?php

// Prototype interface
interface Prototype
{
    public function clone(): Prototype;
}

// Ú©Ù„Ø§Ø³ Ø§ØµÙ„ÛŒ
class User implements Prototype
{
    public string $name;
    public string $role;
    public array $permissions;

    public function __construct(string $name, string $role, array $permissions)
    {
        $this->name = $name;
        $this->role = $role;
        $this->permissions = $permissions;
    }

    public function clone(): Prototype
    {
        // Clone Ø¹Ù…ÛŒÙ‚ (deep copy)
        return clone $this;
    }

    public function show()
    {
        echo "ğŸ‘¤ {$this->name} ({$this->role})\n";
        echo "ğŸ”‘ Permissions: " . implode(', ', $this->permissions) . "\n\n";
    }
}

// Ù†Ù…ÙˆÙ†Ù‡â€ŒÛŒ Ø§ÙˆÙ„ÛŒÙ‡
$admin = new User("Admin", "Administrator", ["create", "edit", "delete"]);
$admin->show();

// Ø³Ø§Ø®Øª Ú©Ø§Ø±Ø¨Ø± Ø¬Ø¯ÛŒØ¯ Ø¨Ø§ Ú©Ù¾ÛŒ
$user1 = $admin->clone();
$user1->name = "Daniyal";
$user1->role = "Editor";
$user1->permissions[] = "publish";

$user1->show();
$admin->show(); // Ù‡Ù†ÙˆØ² Ø¯Ø³Øªâ€ŒÙ†Ø®ÙˆØ±Ø¯Ù‡â€ŒØ³Øª


//ğŸ‘¤ Admin (Administrator)
//ğŸ”‘ Permissions: create, edit, delete

//ğŸ‘¤ Daniyal (Editor)
//ğŸ”‘ Permissions: create, edit, delete, publish

//ğŸ‘¤ Admin (Administrator)
//ğŸ”‘ Permissions: create, edit, delete
